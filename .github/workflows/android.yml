name: Android CI & Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: '版本号，例如 1.0.1'
        required: true
      release_notes:
        description: 'Release 说明'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # 检查主题资源文件是否存在
      - name: Verify theme files exist
        run: |
          echo "Checking theme files..."
          ls -1 app/src/main/res/values
          test -f app/src/main/res/values/attrs.xml
          test -f app/src/main/res/values/colors.xml
          test -f app/src/main/res/values/themes.xml

      # 设置 JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      # 设置 Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 34
          build-tools-version: '34.0.0'

      # 删除默认 mipmap 图标
      - name: Clean default mipmaps
        run: rm -rf app/src/main/res/mipmap-*/

      # 拷贝你仓库中的 icons 到 res/
      - name: Copy custom icons
        run: |
          echo "Copying icons from icons/ to app/src/main/res/"
          cp -rv icons/mipmap-* app/src/main/res/
          echo "Resulting mipmap folders:"
          ls -1 app/src/main/res | grep mipmap

      # 构建 Debug & Release APK
      - name: Build Debug & Release
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: '8.2'
          cache-disabled: true
          arguments: ':app:assembleDebug :app:assembleRelease --info --stacktrace'

      # 创建 GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          body: ${{ github.event.inputs.release_notes }}

      # 上传 APK 文件
      - name: Upload Debug APK
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/debug/app-debug.apk
          asset_name: IClash-${{ github.event.inputs.version }}-debug.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload Release APK
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/app-release.apk
          asset_name: IClash-${{ github.event.inputs.version }}-release.apk
          asset_content_type: application/vnd.android.package-archive

      # 构建失败时上传日志和资源快照
      - name: Save build logs & res snapshot
        if: failure()
        run: |
          mkdir -p debug-output
          cp -r app/src/main/res debug-output/res
          tar czf debug-output/gradle-logs.tgz ~/.gradle/daemon || true

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: ci-debug-artifacts
          path: debug-output