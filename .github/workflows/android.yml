name: Android CI & Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: '版本号，例如 1.0.1'
        required: true
      release_notes:
        description: 'Release 说明'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - uses: android-actions/setup-android@v2
        with:
          api-level: 34
          build-tools-version: '34.0.0'

      - uses: gradle/gradle-build-action@v2

      - name: Build APKs
        run: |
          chmod +x gradlew
          ./gradlew --no-daemon assembleDebug assembleRelease --console=plain --stacktrace 2>&1 | tee build.log

      - name: Upload build.log on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: build.log

      # 下面 Release／上传 APK 的步骤保持不变……


      - name: Build Debug & Release APKs
        shell: bash
        run: |
          gradle assembleDebug assembleRelease \
            --console=plain --info --stacktrace 2>&1 | tee build.log

      - name: Upload full-build-log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: full-build-log
          path: build.log

      - name: Commit error log to log/ci-error.log
        if: failure()
        run: |
          mkdir -p log
          cp compile.log log/ci-error.log || cp build.log log/ci-error.log
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add log/ci-error.log
          git commit -m "chore(ci): update ci-error.log" || echo "no changes"
          git push origin main

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          body: ${{ github.event.inputs.release_notes }}

      - name: Upload Debug APK
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/debug/app-debug.apk
          asset_name: IClash-${{ github.event.inputs.version }}-debug.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload Release APK
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/app-release.apk
          asset_name: IClash-${{ github.event.inputs.version }}-release.apk
          asset_content_type: application/vnd.android.package-archive
