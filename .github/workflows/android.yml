name: Android CI & Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: '版本号，例如 1.0.1'
        required: true
      release_notes:
        description: 'Release 说明'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 签出源码（允许提交回主分支）
      - uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}

      # 2. 设置 JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      # 3. 设置 Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 34
          build-tools-version: '34.0.0'

      # 4. 安装 Gradle CLI
      - name: Set up Gradle CLI
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: '8.2'
          cache-disabled: true

      # 5. 校验资源文件
      - name: Verify values/ directory contents
        run: |
          echo "Checking values/ directory:"
          ls -l app/src/main/res/values
          for f in attrs.xml colors.xml themes.xml; do
            if [ ! -f "app/src/main/res/values/$f" ]; then
              echo "❌ Missing: $f"
              exit 1
            fi
          done

      # 6. 拷贝自定义 icons
      - name: Copy custom icons
        run: |
          rm -rf app/src/main/res/mipmap-*/
          cp -rv icons/mipmap-* app/src/main/res/

      # 7. 编译 Kotlin 并捕获日志
      - name: Compile Kotlin & capture errors
        shell: bash
        run: |
          gradle clean compileDebugKotlin compileReleaseKotlin \
            --console=plain --info --stacktrace 2>&1 | tee compile.log

      # 8. 上传 Kotlin 编译日志（失败时）
      - name: Upload kotlin-compile-log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: kotlin-compile-log
          path: compile.log

      # 9. 构建 APK 并捕获日志
      - name: Build Debug & Release APKs
        shell: bash
        run: |
          gradle assembleDebug assembleRelease \
            --console=plain --info --stacktrace 2>&1 | tee build.log

      # 10. 上传构建日志（失败时）
      - name: Upload full-build-log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: full-build-log
          path: build.log

      # 11. 将错误日志写入 log/ci-error.log 并提交到主分支
      - name: Commit error log to log/ folder on main
        if: failure()
        run: |
          mkdir -p log
          LOG_FILE=""
          if [ -f compile.log ]; then
            LOG_FILE="compile.log"
          elif [ -f build.log ]; then
            LOG_FILE="build.log"
          else
            echo "❌ No log file found"
            exit 1
          fi

          cp "$LOG_FILE" log/ci-error.log

          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git add log/ci-error.log
          git commit -m "chore(ci): update ci-error.log from failed build" || echo "No changes to commit"
          git push origin main

      # 12. 创建 GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          body: ${{ github.event.inputs.release_notes }}

      # 13. 上传 Debug APK
      - name: Upload Debug APK
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/debug/app-debug.apk
          asset_name: IClash-${{ github.event.inputs.version }}-debug.apk
          asset_content_type: application/vnd.android.package-archive

      # 14. 上传 Release APK
      - name: Upload Release APK
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/app-release.apk
          asset_name: IClash-${{ github.event.inputs.version }}-release.apk
          asset_content_type: application/vnd.android.package-archive